name: Release a new docker image from build

on:
  create:
    tags:
      - "v*.*.*"
  push:
    tags:
      - "v*.*.*"
permissions:
  contents: read
  packages: write

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code for performing a release
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup jdk for compilation and docker release build version
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value={{tag}}
            type=sha
            type=sha,format=long

      - name: Compile, build and push image with Jib
        run: |
          
          tags=$(cat <<EOF
          ${{ steps.meta.outputs.tags }}
          EOF
          )
          tags=${tags//$'\n'/','}
          tags=${tags//$'ghcr.io/antinvestor/integration-smpp:'/''}
          
          echo "debug tags -----------------------------------"
          echo $tags

          labels=$(cat <<EOF
          ${{ steps.meta.outputs.labels }}
          EOF
          )
          labels=${labels//$'\n'/'",'}
          labels=${labels//$'='/'="'}
          labels="${labels}\""
          
          echo "debug labels -----------------------------------"
          echo $labels
          
          ./gradlew jibDockerBuild --image=ghcr.io/${{ github.repository }} \
          -Djib.to.image=ghcr.io/${{ github.repository }} \
          -Djib.to.tags="${tags}" \
          -Djib.to.auth.username=${{ github.repository_owner }} \
          -Djib.to.auth.password=${{ secrets.CR_PAT }} \
          -Djib.container.labels="${labels}" 
          
          echo "Starting image push"
          echo -e "${{ steps.meta.outputs.tags }}" | xargs -I{} docker push {}
          
